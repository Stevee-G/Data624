library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(RWeka)
update.packages()
update.packages()
update.packages(RWeka)
update.packages('RWeka')
library(RWeka)
remove.packages(RWeka)
remove.packages('RWeka')
install.packages('RWeka')
library(RWeka)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
set.seed(91)
simulated <- mlbench.friedman1(200, sd = 1)
simulated <- cbind(simulated$x, simulated$y)
simulated <- as.data.frame(simulated)
colnames(simulated)[ncol(simulated)] <- "y"
View(simulated)
model1 <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rfImp1 <- varImp(model1, scale = FALSE)
View(rfImp1)
rfImp1
simulated$duplicate1 <- simulated$V1 + rnorm(200) * .1
cor(simulated$duplicate1, simulated$V1)
set.seed(92)
rf_model <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rf_imp <- varImp(rf_model, scale = FALSE)
rf_imp
set.seed(92)
rf_model <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rf_imp <- varImp(rf_model, scale = FALSE)
rf_imp
simulated$duplicate2 <- simulated$V2 + rnorm(200) * .1
set.seed(93)
rf_model1 <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rf_imp1 <- varImp(rf_model1, scale = FALSE)
rf_imp1
View(simulated)
simulated %>%
select(c(-(starts_with("dup"))))
simulated <- simulated %>%
select(c(-(starts_with("d"))))
set.seed(94)
cf_model <- cforest(y ~ .,
data = simulated,
ntree = 1000)
cf_imp <- varimp(cf_model, conditional = TRUE)
cf_imp
cf_imp %>%
as_tibble() %>%
pivot_longer(everything(),
names_to = 'Predictor',
values_to = 'Overall')
cf_imp %>%
as_tibble() %>%
pivot_longer(everything(),
values_to = 'Overall')
cf_imp %>%
as_tibble()
gbm_grid <- expand.grid(interaction.depth = seq(1, 7, by = 2),
n.trees = seq(100, 1000, by = 50),
shrinkage = c(0.01, 0.1),
n.minobsinnode = 10)
set.seed(95)
gbm_model <- train(y ~ .,
data = simulated,
method = "gbm",
tuneGrid = gbm_grid,
verbose = FALSE)
gbm_model <- varImp(gbm_model$finalModel, scale = FALSE)
gbm_model
gbm_grid <- expand.grid(interaction.depth = seq(1, 7, by = 2),
n.trees = seq(100, 1000, by = 50),
shrinkage = c(0.01, 0.1),
n.minobsinnode = 10)
set.seed(95)
gbm_model <- train(y ~ .,
data = simulated,
method = "gbm",
tuneGrid = gbm_grid,
verbose = FALSE)
gbm_imp <- varImp(gbm_model$finalModel, scale = FALSE)
gbm_imp
set.seed(96)
c_model <- train(y ~ .,
data = simulated,
method = "cubist",)
c_imp <- varImp(c_model$finalModel, scale = FALSE)
c_imp
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
set.seed(91)
simulated <- mlbench.friedman1(200, sd = 1)
simulated <- cbind(simulated$x, simulated$y)
simulated <- as.data.frame(simulated)
colnames(simulated)[ncol(simulated)] <- "y"
x <- sample(1:10 / 10, 500, replace = TRUE)
x <- sample(1:10 / 10, 500, replace = TRUE)
x
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 7))
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 8))
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 10))
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 9))
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 8))
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 5))
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 6))
set.seed(97)
x <- sample(1:1000 / 1000, 500, replace = TRUE)
y <- sample(1:10000 / 10000, 500, replace = TRUE)
z <- sample(1:100000 / 100000, 500, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 7))
set.seed(97)
x <- sample(1:50 / 10, 100, replace = TRUE)
y <- sample(1:100 / 10, 100, replace = TRUE)
z <- sample(1:500 / 10, 100, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 7))
set.seed(97)
x <- sample(1:50 / 10, 100, replace = TRUE)
y <- sample(1:100 / 100, 100, replace = TRUE)
z <- sample(1:500 / 1000, 100, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rpartTree <- rpart(y ~ .,
data = sim)
plot(as.party(rpartTree), gp = gpar(fontsize = 7))
set.seed(97)
x <- sample(1:50 / 10, 100, replace = TRUE)
y <- sample(1:100 / 100, 100, replace = TRUE)
z <- sample(1:500 / 1000, 100, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rp_model <- rpart(y ~ .,
data = sim)
plot(as.party(rp_model), gp = gpar(fontsize = 7))
varImp(rpartTree)
set.seed(97)
x <- sample(1:50 / 10, 100, replace = TRUE)
y <- sample(1:100 / 100, 100, replace = TRUE)
z <- sample(1:500 / 1000, 100, replace = TRUE)
xyz <- x + y + z
sim <- data.frame(x,y,z,xyz)
rp_model <- rpart(y ~ .,
data = sim)
plot(as.party(rp_model), gp = gpar(fontsize = 7))
varImp(rp_model)
data(ChemicalManufacturingProcess)
cmp <- kNN(ChemicalManufacturingProcess, k = 5) %>%
select(c(1:58)) %>%
select(!nearZeroVar(.))
set.seed(98)
ctrl1 <- trainControl(method = "cv", number = 10)
split <- createDataPartition(cmp$Yield, p = 0.8, list = FALSE)
train.data  <- cmp[split, ]
test.data <- cmp[-split, ]
set.seed(99)
st_model <- train(Yield ~ .,
data = train.data,
method = "rpart",
tuneLength = 10,
trControl = ctrl1)
st_pred <- predict(cartTune, test_x)
data(ChemicalManufacturingProcess)
cmp <- kNN(ChemicalManufacturingProcess, k = 5) %>%
select(c(1:58)) %>%
select(!nearZeroVar(.))
set.seed(98)
ctrl1 <- trainControl(method = "cv", number = 10)
split <- createDataPartition(cmp$Yield, p = 0.8, list = FALSE)
train.data  <- cmp[split, ]
test.data <- cmp[-split, ]
set.seed(99)
st_model <- train(Yield ~ .,
data = train.data,
method = "rpart",
tuneLength = 10,
trControl = ctrl1)
st_pred <- predict(st_model, test.data)
data(ChemicalManufacturingProcess)
cmp <- kNN(ChemicalManufacturingProcess, k = 5) %>%
select(c(1:58)) %>%
select(!nearZeroVar(.))
set.seed(98)
ctrl1 <- trainControl(method = "cv", number = 10)
split <- createDataPartition(cmp$Yield, p = 0.8, list = FALSE)
train.data  <- cmp[split, ]
test.data <- cmp[-split, ]
set.seed(99)
st_model <- train(Yield ~ .,
data = train.data,
method = "rpart",
tuneLength = 10,
trControl = ctrl1)
st_pred <- predict(st_model, test.data)
set.seed(100)
bt_model <- ipredbagg(Yield ~ .,
data = train.data)
install.packages('ipred')
data(ChemicalManufacturingProcess)
cmp <- kNN(ChemicalManufacturingProcess, k = 5) %>%
select(c(1:58)) %>%
select(!nearZeroVar(.))
set.seed(98)
ctrl1 <- trainControl(method = "cv", number = 10)
split <- createDataPartition(cmp$Yield, p = 0.8, list = FALSE)
train.data  <- cmp[split, ]
test.data <- cmp[-split, ]
set.seed(99)
st_model <- train(Yield ~ .,
data = train.data,
method = "rpart",
tuneLength = 10,
trControl = ctrl1)
st_pred <- predict(st_model, test.data)
set.seed(100)
bt_model <- bagging(Yield ~ .,
data = train.data)
bt_pred <- predict(bt_model, test.data)
set.seed(101)
rf_model2 <- randomForest(Yield ~ .,
data = train.data,
importance = TRUE,
ntree = 1000)
rf_pred <- predict(rf_model, test.data)
gbm_grid1 <- expand.grid(interaction.depth = seq(1, 7, by = 2),
n.trees = seq(100, 1000, by = 50),
shrinkage = c(0.01, 0.1),
n.minobsinnode = 10)
set.seed(102)
gbm_model1 <- train(Yield ~ .,
data = train.data,
method = "gbm",
tuneGrid = gbm_grid1,
verbose = FALSE)
gbm_pred <- predict(gbm_model1, test.data)
set.seed(103)
c_model1 <- train(Yield ~ .,
data = train.data,
method = "cubist")
c_pred <- predict(c_model1, test.data)
data(ChemicalManufacturingProcess)
cmp <- kNN(ChemicalManufacturingProcess, k = 5) %>%
select(c(1:58)) %>%
select(!nearZeroVar(.))
set.seed(98)
ctrl1 <- trainControl(method = "cv", number = 10)
split <- createDataPartition(cmp$Yield, p = 0.8, list = FALSE)
train.data  <- cmp[split, ]
test.data <- cmp[-split, ]
set.seed(99)
st_model <- train(Yield ~ .,
data = train.data,
method = "rpart",
tuneLength = 10,
trControl = ctrl1)
st_pred <- predict(st_model, test.data)
set.seed(100)
bt_model <- bagging(Yield ~ .,
data = train.data)
bt_pred <- predict(bt_model, test.data)
set.seed(101)
rf_model2 <- randomForest(Yield ~ .,
data = train.data,
importance = TRUE,
ntree = 1000)
rf_pred <- predict(rf_model2, test.data)
gbm_grid1 <- expand.grid(interaction.depth = seq(1, 7, by = 2),
n.trees = seq(100, 1000, by = 50),
shrinkage = c(0.01, 0.1),
n.minobsinnode = 10)
set.seed(102)
gbm_model1 <- train(Yield ~ .,
data = train.data,
method = "gbm",
tuneGrid = gbm_grid1,
verbose = FALSE)
gbm_pred <- predict(gbm_model1, test.data)
set.seed(103)
c_model1 <- train(Yield ~ .,
data = train.data,
method = "cubist")
c_pred <- predict(c_model1, test.data)
postResample(st_pred, test.data)
postResample(st_pred, test.data$Yield)
postResample(bt_pred, test.data$Yield)
postResample(rf_pred, test.data$Yield)
postResample(gbm_pred, test.data$Yield)
postResample(c_pred, test.data$Yield)
rp_model1 <- rpart(Yield ~ .,
data = train.data)
plot(as.party(rp_model1), ip_args = list(abbreviate = 4), gp = gpar(fontsize = 7))
set.seed(104)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
set.seed(105)
svm_model1 <- train(Yield ~ .,
data = train.data,
method = "svmRadial",
trControl = ctrl1,
preProcess = c("center","scale"),
tuneLength = 10)
svm_pred1 <- predict(svm_model1, newdata = test.data)
varImp(gbm_model1)
varImp(ridge_model1)
varImp(svm_model1)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
