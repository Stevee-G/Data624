ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor, method = 'number')
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
set.seed(81)
trainingData <- mlbench.friedman1(200, sd = 1)
trainingData$x <- data.frame(trainingData$x)
featurePlot(trainingData$x, trainingData$y)
testData <- mlbench.friedman1(5000, sd = 1)
testData$x <- data.frame(testData$x)
knnModel <- train(x = trainingData$x,y = trainingData$y, method = "knn",
preProc = c("center", "scale"),tuneLength = 10)
knnPred <- predict(knnModel, newdata = testData$x)
postResample(pred = knnPred, obs = testData$y)
set.seed(82)
ctrl <- trainControl(method = "cv", number = 10)
nnet_grid <- expand.grid(.decay = c(0, 0.01, .1), .size = c(1:10), .bag = FALSE)
nnet_model <- train(x = trainingData$x,
y = trainingData$y,
method = "avNNet",
tuneGrid = nnet_grid,
trControl = ctrl,
preProc = c("center", "scale"),
linout = TRUE,
trace = FALSE,
MaxNWts = 10 * (ncol(trainingData$x) + 1) + 10 + 1,
maxit = 500)
nnet_pred <- predict(nnet_model, newdata = testData$x)
postResample(pred = nnet_pred, obs = testData$y)
varImp(nnet_model)
set.seed(83)
mars_model <- train(x = trainingData$x,
y = trainingData$y,
method = "earth",
preProc = c("center", "scale"),
tuneLength = 10)
mars_pred <- predict(mars_model, newdata = testData$x)
postResample(pred = mars_pred, obs = testData$y)
varImp(mars_model)
set.seed(84)
svm_model <- train(x = trainingData$x,
y = trainingData$y,
method = "svmRadial",
preProc = c("center", "scale"),
tuneLength = 10)
svm_pred <- predict(svm_model, newdata = testData$x)
postResample(pred = svm_pred, obs = testData$y)
varImp(svm_model)
data(ChemicalManufacturingProcess)
cmp <- kNN(ChemicalManufacturingProcess, k = 5) %>%
select(c(1:58)) %>%
select(!nearZeroVar(.))
set.seed(85)
ctrl1 <- trainControl(method = "cv", number = 10)
split <- createDataPartition(cmp$Yield, p = 0.8, list = FALSE)
train.data  <- cmp[split, ]
test.data <- cmp[-split, ]
knn_model1 <- train(Yield ~ .,
data = train.data,
method = "knn",
trControl = ctrl1,
preProcess = c("center","scale"),
tuneLength = 10)
knn_pred1 <- predict(knn_model1, newdata = test.data)
postResample(pred = knn_pred1, obs = test.data$Yield)
nnet_grid1 <- expand.grid(.decay = c(0, 0.01, .1), .size = c(1:10), .bag = FALSE)
nnet_model1 <- train(Yield ~ .,
data = train.data,
method = "avNNet",
tuneGrid = nnet_grid1,
trControl = ctrl1,
preProc = c("center", "scale"),
linout = TRUE,
trace = FALSE,
MaxNWts = 10 * (ncol(train.data) + 1) + 10 + 1,
maxit = 500)
nnet_pred1 <- predict(nnet_model1, newdata = test.data)
postResample(pred = nnet_pred1, obs = test.data$Yield)
mars_model1 <- train(Yield ~ .,
data = train.data,
method = "earth",
trControl = ctrl1,
preProcess = c("center","scale"),
tuneLength = 10)
mars_pred1 <- predict(mars_model1, newdata = test.data)
postResample(pred = mars_pred1, obs = test.data$Yield)
svm_model1 <- train(Yield ~ .,
data = train.data,
method = "svmRadial",
trControl = ctrl1,
preProcess = c("center","scale"),
tuneLength = 10)
svm_pred1 <- predict(svm_model1, newdata = test.data)
postResample(pred = svm_pred1, obs = test.data$Yield)
varImp(svm_model1)
varImp(svm_model1, top = 10)
plot(varImp(svm_model1, top = 10))
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
plot(caret::varImp(svm_model1, top = 10))
plot(caret::varImp(svm_model1))
varImp(svm_model1)
varImp(svm_model1) %>%
head()
varImp(svm_model1) %>%
head(n = 10)
varImp(svm_model1) %>%
first(10)
varImp(svm_model1) %>%
top_n(10)
varImp(svm_model1) %>%
top_n(n = 10)
varImp(svm_model1) %>%
head(3)
varImp(svm_model1) %>%
head(n = 10)
varImp(svm_model1)
varImp(svm_model1)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
varImp(ridge_model1)
varImp(svm_model1)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
varImp(ridge_model1, top = 10)
cmp_cor <- cor(cmp %>%
select(ManufacturingProcess32, ManufacturingProcess13,
BiologicalMaterial06, ManufacturingProcess36,
ManufacturingProcess17, ManufacturingProcess09,
ManufacturingProcess31, BiologicalMaterial02,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor)
library('rpart')
install.packages('Cubist')
install.packages('party')
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
install.packages('partykit')
install.packages('RWeka')
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(Rweka)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(RWeka)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(RWeka)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(RWeka)
install.packages("RWeka", dependencies = TRUE)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(RWeka)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(RWeka)
update.packages()
update.packages()
update.packages(RWeka)
update.packages('RWeka')
library(RWeka)
remove.packages(RWeka)
remove.packages('RWeka')
install.packages('RWeka')
library(RWeka)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(earth)
library(e1071)
library(elasticnet)
library(grplasso)
library(kernlab)
library(lars)
library(MASS)
library(mlbench)
library(nnet)
library(penalized)
library(pls)
library(stats)
library(tidyverse)
library(VIM)
library(rpart)
library(Cubist)
library(gbm)
library(ipred)
library(party)
library(partykit)
library(randomForest)
set.seed(91)
simulated <- mlbench.friedman1(200, sd = 1)
simulated <- cbind(simulated$x, simulated$y)
simulated <- as.data.frame(simulated)
colnames(simulated)[ncol(simulated)] <- "y"
View(simulated)
model1 <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rfImp1 <- varImp(model1, scale = FALSE)
View(rfImp1)
rfImp1
simulated$duplicate1 <- simulated$V1 + rnorm(200) * .1
cor(simulated$duplicate1, simulated$V1)
set.seed(92)
rf_model <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rf_imp <- varImp(rf_model, scale = FALSE)
rf_imp
set.seed(92)
rf_model <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rf_imp <- varImp(rf_model, scale = FALSE)
rf_imp
simulated$duplicate2 <- simulated$V2 + rnorm(200) * .1
set.seed(93)
rf_model1 <- randomForest(y ~ .,
data = simulated,
importance = TRUE,
ntree = 1000)
rf_imp1 <- varImp(rf_model1, scale = FALSE)
rf_imp1
View(simulated)
simulated %>%
select(c(-(starts_with("dup"))))
simulated <- simulated %>%
select(c(-(starts_with("d"))))
set.seed(94)
cf_model <- cforest(y ~ .,
data = simulated,
ntree = 1000)
cf_imp <- varimp(cf_model, conditional = TRUE)
cf_imp
cf_imp %>%
as_tibble() %>%
pivot_longer(everything(),
names_to = 'Predictor',
values_to = 'Overall')
cf_imp %>%
as_tibble() %>%
pivot_longer(everything(),
values_to = 'Overall')
cf_imp %>%
as_tibble()
gbm_grid <- expand.grid(interaction.depth = seq(1, 7, by = 2),
n.trees = seq(100, 1000, by = 50),
shrinkage = c(0.01, 0.1),
n.minobsinnode = 10)
set.seed(95)
gbm_model <- train(y ~ .,
data = simulated,
method = "gbm",
tuneGrid = gbm_grid,
verbose = FALSE)
gbm_model <- varImp(gbm_model$finalModel, scale = FALSE)
gbm_model
gbm_grid <- expand.grid(interaction.depth = seq(1, 7, by = 2),
n.trees = seq(100, 1000, by = 50),
shrinkage = c(0.01, 0.1),
n.minobsinnode = 10)
set.seed(95)
gbm_model <- train(y ~ .,
data = simulated,
method = "gbm",
tuneGrid = gbm_grid,
verbose = FALSE)
gbm_imp <- varImp(gbm_model$finalModel, scale = FALSE)
gbm_imp
set.seed(96)
c_model <- train(y ~ .,
data = simulated,
method = "cubist",)
c_imp <- varImp(c_model$finalModel, scale = FALSE)
c_imp
