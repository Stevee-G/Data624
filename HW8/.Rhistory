ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(x = Xtrain.data1,
y = Ytrain.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_imputed$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[,split1]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_imputed$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(x = Xtrain.data1,
y = Ytrain.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_imputed$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_prediction1 <- ridge_model1 %>%
predict(xtest.data)
cbind(RMSE = RMSE(ridge_prediction1, ytest.data),
"R^2" = caret::R2(ridge_prediction1, ytest.data))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_imputed$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_prediction1 <- ridge_model1 %>%
predict(xtest.data1)
cbind(RMSE = RMSE(ridge_prediction1, ytest.data1),
"R^2" = caret::R2(ridge_prediction1, ytest.data1))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_prediction1 <- ridge_model1 %>%
predict(xtest.data1)
cbind(RMSE = RMSE(ridge_prediction1, ytest.data1),
"R^2" = caret::R2(ridge_prediction1, ytest.data1))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 57))
ridge_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_prediction1 <- ridge_model1 %>%
predict(xtest.data1)
cbind(RMSE = RMSE(ridge_prediction1, ytest.data1),
"R^2" = caret::R2(ridge_prediction1, ytest.data1))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_prediction1 <- pls_model1 %>%
predict(xtest.data1)
cbind(RMSE = RMSE(pls_prediction1, ytest.data1),
"R^2" = caret::R2(pls_prediction1, ytest.data1))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(Yield ~ .,
x = Xtrain.data1,
y = Ytrain.data1,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data  <- cmp_prepared[split1, ]
xtest.data <- cmp_prepared[-split1, ]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(Yield ~ .,
data = train.data,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_prediction1 <- pls_model1 %>%
predict(test.data)
cbind(RMSE = RMSE(pls_prediction1, test.data),
"R^2" = caret::R2(pls_prediction1, test.data))
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_prediction1 <- pls_model1 %>%
predict(test.data)
plsModel_2$results[plsModel_2$results$RMSE == min(plsModel_2$results$RMSE),]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_prediction1 <- pls_model1 %>%
predict(test.data)
pls_model1$results[pls_model1$results$RMSE == min(pls_model1$results$RMSE),]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_prediction1 <- pls_model1 %>%
predict(xtest.data1)
pls_prediction1$results[pls_prediction1$results$RMSE == min(pls_prediction1$results$RMSE),]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_model1 %>%
predict(xtest.data1)
pls_prediction1$results[pls_prediction1$results$RMSE == min(pls_prediction1$results$RMSE),]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
Xtrain.data1  <- cmp_prepared[split1, ]
xtest.data1 <- cmp_prepared[-split1, ]
Ytrain.data1  <- cmp_prepared[split1]
ytest.data1 <- cmp_prepared[-split1]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(x = Xtrain.data1,
y = Ytrain.data1,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_model1 %>%
predict(xtest.data1)
pls_model1$results[pls_model1$results$RMSE == min(pls_model1$results$RMSE),]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
train.data  <- cmp_prepared[split1, ]
test.data <- cmp_prepared[-split1, ]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
pls_model1 <- train(Yield ~ .,
data = train.data,
method = "pls",
tuneLength = 20,
trControl = ctrl1,
preProc = c("center", "scale"))
pls_model1$results %>%
inner_join(pls_model1$bestTune)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_model1$results %>%
inner_join(ridge_model1$bestTune)
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
train.data  <- cmp_prepared[split1, ]
test.data <- cmp_prepared[-split1, ]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_model1$results %>%
inner_join(ridge_model1$bestTune)
postResample(pred = predict(rideg_model1, test.data), obs =test.data$Yield)
postResample(pred = predict(ridge_model1, test.data), obs =test.data$Yield)
plot(varImp(ridge_model1), top = 10)
View(cmp_prepared)
cmp_cor <- cor(cmp_prepared %>%
select(Yield,
ends_with(C("Process32","Process13",
"Process36", "Material06",
"Process31", "Process17",
"Material02", "Process09",
"Material12", "Material03"))))
cmp_cor <- cor(cmp_prepared %>%
select(Yield,
ends_with(c("Process32","Process13",
"Process36", "Material06",
"Process31", "Process17",
"Material02", "Process09",
"Material12", "Material03"))))
corrplot(cmp_cor, order = 'hclust')
cmp_cor <- cor(cmp_prepared %>%
select(Yield, ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03))
corrplot(cmp_cor, order = 'hclust')
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03))
corrplot(cmp_cor, order = 'hclust')
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03))
corrplot(cmp_cor)
cmp_cor <- corrplot::cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03))
corrplot::corrplot(cmp_cor)
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03))
corrplot::corrplot(cmp_cor)
library(AppliedPredictiveModeling)
library(caret)
library(corrplot)
library(elasticnet)
library(penalized)
library(pls)
library(grplasso)
library(lars)
library(MASS)
library(stats)
library(tidyverse)
library(VIM)
data(permeability)
str(fingerprints)
low_freq_preds <- nearZeroVar(fingerprints)
low_freq_preds
length(low_freq_preds)
fp_filtered <- fingerprints[,-low_freq_preds]
str(fp_filtered)
set.seed(71)
split <- permeability %>%
createDataPartition(p = 0.8, list = FALSE, times = 1)
Xtrain.data  <- fp_filtered[split, ]
xtest.data <- fp_filtered[-split, ]
Ytrain.data  <- permeability[split, ]
ytest.data <- permeability[-split, ]
ctrl <- trainControl(method = "cv", number = 10)
pls_model <- train(x = Xtrain.data,
y = Ytrain.data,
method = "pls",
tuneLength = 20,
trControl = ctrl,
preProc = c("center", "scale"))
pls_model
pls_prediction <- pls_model %>%
predict(xtest.data)
cbind(
RMSE = RMSE(pls_prediction, ytest.data),
"R^2" = caret::R2(pls_prediction, ytest.data)
)
data(ChemicalManufacturingProcess)
str(ChemicalManufacturingProcess)
sum(is.na(ChemicalManufacturingProcess))
ChemicalManufacturingProcess %>%
summarize_all(funs(sum(is.na(.)))) %>%
pivot_longer(everything(),
names_to = 'Predictor',
values_to = 'Number of Missing Values')
cmp_imputed <- kNN(ChemicalManufacturingProcess, k = 5) %>%
select(c(1:58))
sum(is.na(cmp_imputed))
cmp_imputed %>%
summarize_all(funs(sum(is.na(.)))) %>%
pivot_longer(everything(),
names_to = 'Predictor',
values_to = 'Number of Missing Values')
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
train.data  <- cmp_prepared[split1, ]
test.data <- cmp_prepared[-split1, ]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_model1$results[ridge_model1$results$RMSE == min(ridge_model1$results$RMSE),]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
train.data  <- cmp_prepared[split1, ]
test.data <- cmp_prepared[-split1, ]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_model1$results %>%
inner_join(ridge_model1$bestTune)
#ridge_model1$results[ridge_model1$results$RMSE == min(ridge_model1$results$RMSE),]
cmp_prepared <- cmp_imputed %>%
select(!nearZeroVar(.))
set.seed(74)
split1 <- createDataPartition(cmp_prepared$Yield, p = 0.8, list = FALSE)
train.data  <- cmp_prepared[split1, ]
test.data <- cmp_prepared[-split1, ]
ctrl1 <- trainControl(method = "cv", number = 10)
ridge_grid1 <- data.frame(.lambda = seq(0.001, 0.5, length = 25))
ridge_model1 <- train(Yield ~ .,
data = train.data,
method = "ridge",
metric = "Rsquared",
tuneGrid = ridge_grid1,
trControl = ctrl1,
preProc = c("center", "scale"))
ridge_model1$results[ridge_model1$results$RMSE == min(ridge_model1$results$RMSE),]
postResample(pred = predict(ridge_model1, test.data), obs =test.data$Yield)
plot(varImp(ridge_model1), top = 10)
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor)
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor, diag + TRUE)
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor, diag = TRUE)
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor, method = 'number')
cmp_cor <- cor(cmp_prepared %>%
select(ManufacturingProcess32, ManufacturingProcess13,
ManufacturingProcess36, BiologicalMaterial06,
ManufacturingProcess31, ManufacturingProcess17,
BiologicalMaterial02, ManufacturingProcess09,
BiologicalMaterial12, BiologicalMaterial03,
Yield))
corrplot::corrplot(cmp_cor)
