nudge_x = 1,
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(aes(label = Country),
nudge_x = 1,
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(aes(label = Country),
nudge_x = 1,
na.rm = TRUE) +
theme(legend.key.size = unit(1, 'cm'))
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
theme(legend.key.size = unit(1, 'cm'))
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel() +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(aes(label = Country),
max.overlaps = 1000,
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>% group_by(Country) %>% filter(Year == max(Year)),
aes(label = Country),
max.overlaps = 1000,
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>% group_by(Country) %>% filter(Year == max(Year)),
aes(label = Country),
max.overlaps = 1000,
hjust = 1,
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>% group_by(Country) %>% filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
group_by(Country) %>%
filter(Year == max(Year)) %>%
sort(max(GDP/Population)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
sort(max(GDP/Population)) %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
order_by(max(GDP/Population)) %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
order_by(GDP/Population) %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
order_by(GDP/Population) %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
sort(GDP/Population) %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
sort(Population) %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
max.overlaps = 100,
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
geom_label_repel(data = global_economy %>%
group_by(Country) %>%
filter(Year == max(Year)),
aes(label = Country),
max.overlaps = 250,
na.rm = TRUE) +
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US")
theme(legend.position = "none")
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per capita", y = "$US") +
theme(legend.position = "none")
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year = max(Year)) %>%
order_by(GDP_capita)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year = max(Year)) %>%
arrange(GDP_capita)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year == max(Year)) %>%
arrange(GDP_capita)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year == max(Year)) %>%
sort(GDP_capita)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year == max(Year)) %>%
arrange(-GDP_capita)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year == max(Year)) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita), Year)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita), desc(Year))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year == 2015, Year == 2016, Year == 2017) %>%
arrange(desc(GDP_capita), Year)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year == c(2015, 2016, 2017)) %>%
arrange(desc(GDP_capita), Year)
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Year == c(2015, 2016, 2017)) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == c(MCO,LIE), Year == 2016) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == c('MCO','LIE'), Year == 2016) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == MCO | Code == LIE, Year == 2016) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == 'MCO' | Code == 'LIE', Year == 2016) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == 'MCO' | Code == 'LIE', Year == max(Year)) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == 'MCO' | Code == 'LIE') %>%
filter(Year == max(Year)) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == 'MCO' | Code == 'LIE', Year == max(Year)) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == 'MCO' | Code == 'LIE', Year == 2016) %>%
arrange(desc(GDP_capita))
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per Capita", y = "$US") +
theme(legend.position = "none")
library(fpp3)
library(ggrepel)
library(USgas)
gas <- tail(aus_production, 5*4) |> select(Gas)
View(gas)
autoplot(gas)
gas %>%
model(classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components() %>%
autoplot(season_adust)
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components() %>%
autoplot()
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
autoplot()
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
autoplot(seaon_adjust)
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
autoplot(season_adjust)
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
as_tsibble() %>%
autoplot(season_adjust)
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components() %>%
as_tsibble() %>%
autoplot(season_adjust)
gas_outlier <- gas
gas_outlier[7] <- gas_outlier[7] + 300
gas_outlier <- gas
gas_outlier$Gas[7] <- gas_outlier[7] + 300
gas_outlier <- gas
gas_outlier$Gas[7] <- gas_outlier$Gas[7] + 300
View(gas_outlier)
gas_outlier <- gas
gas_outlier$Gas[7] <- gas_outlier$Gas[7] + 300
gas_outlier %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas_outlier1 <- gas
gas_outlier1$Gas[20] <- gas_outlier1$Gas[20] + 300
gas_outlier1 %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
set.seed(1)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
autoplot(myseries, Turnover) +
labs(title = "Retail Turnovers")
lambda_turnover <- myseries %>%
features(Turnover, features = guerrero) %>%
pull(lambda_guerrero)
lambda_turnover
myseries %>%
autoplot(box_cox(Turnover, lambda_turnover)) +
labs(title = "Lambda Transformed Retail Turnovers")
View(myseries)
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components()
library(fpp3)
library(ggrepel)
library(USgas)
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components()
install.packages('seasonal')
library(fpp3)
library(seasonal)
library(USgas)
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components()
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components()
model(x11 = X_13ARIMA_SEATS(Employed ~ x11())) |>
components() %>%
autoplot()
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components()
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components() %>%
autoplot()
library(fpp3)
library(seasonal)
library(USgas)
autoplot(global_economy, GDP/Population) +
labs(title= "GDP per Capita", y = "$US") +
theme(legend.position = "none")
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
arrange(desc(GDP_capita))
global_economy %>%
mutate(GDP_capita = GDP/Population) %>%
filter(Code == "MCO" | Code == "LIE", Year == 2016) %>%
arrange(desc(GDP_capita))
autoplot(global_economy %>%
filter(Country == "United States"), GDP) +
labs(title= "US GDP")
autoplot(aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers",
State == "Victoria"), Count) +
labs(title= "Slaughter of Victorian “Bulls, bullocks and steers”")
lambda_livestock <- aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers",
State == "Victoria") %>%
features(Count, features = guerrero) %>%
pull(lambda_guerrero)
aus_livestock %>%
filter(Animal == "Bulls, bullocks and steers",
State == "Victoria") %>%
autoplot(box_cox(Count, lambda_livestock)) +
labs(title= "Lambda Transformed Slaughter of Victorian “Bulls, bullocks and steers”")
autoplot(vic_elec, Demand) +
labs(title = "Victorian Electricity Demand")
lambda_elec <- vic_elec %>%
features(Demand, features = guerrero) %>%
pull(lambda_guerrero)
vic_elec %>%
autoplot(box_cox(Demand, lambda_elec)) +
labs(title = "Lambda Transformed Victorian Electricity Demand")
autoplot(aus_production, Gas) +
labs(title= "Australian Gas Production")
lambda_gas <- aus_production %>%
features(Gas, features = guerrero) %>%
pull(lambda_guerrero)
aus_production %>%
autoplot(box_cox(Gas, lambda_gas)) +
labs(title = "Lambda Transformed Australian Gas Production")
autoplot(canadian_gas, Volume) +
labs(title= "Canadian Gas")
lambda_canada <- canadian_gas %>%
features(Volume, features = guerrero) %>%
pull(lambda_guerrero)
canadian_gas %>%
autoplot(box_cox(Volume, lambda_canada)) +
labs(title = "Lambda Transformed Canadian Gas")
set.seed(1)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`,1))
autoplot(myseries, Turnover) +
labs(title = "Retail Turnovers")
lambda_turnover <- myseries %>%
features(Turnover, features = guerrero) %>%
pull(lambda_guerrero)
lambda_turnover
myseries %>%
autoplot(box_cox(Turnover, lambda_turnover)) +
labs(title = "Lambda Transformed Retail Turnovers")
autoplot(aus_production, Tobacco) +
labs(title = "Tobacco and Cigarette Production")
lambda_tobacco <- aus_production %>%
features(Tobacco, features = guerrero) %>%
pull(lambda_guerrero)
lambda_tobacco
aus_production %>%
autoplot(box_cox(Tobacco, lambda_tobacco)) +
labs(title = "Lambda Transformed Tobacco and Cigarette Production")
autoplot(ansett %>%
filter(Class == "Economy", Airports == "MEL-SYD"), Passengers) +
labs(title = "Economy Class Passengers between Melbourne and Sydney")
lambda_econ <- ansett %>%
filter(Class == "Economy", Airports == "MEL-SYD") %>%
features(Passengers, features = guerrero) %>%
pull(lambda_guerrero)
lambda_econ
ansett %>%
filter(Class == "Economy", Airports == "MEL-SYD") %>%
autoplot(box_cox(Passengers, lambda_econ)) +
labs(title = "Lambda Transformed Economy Class Passengers between Melbourne and Sydney")
autoplot(pedestrian %>%
filter(Sensor == "Southern Cross Station"), Count) +
labs(title = "Pedestrians at Southern Cross Station")
lambda_ped <- pedestrian %>%
filter(Sensor == "Southern Cross Station") %>%
features(Count, features = guerrero) %>%
pull(lambda_guerrero)
lambda_ped
pedestrian %>%
filter(Sensor == "Southern Cross Station") %>%
autoplot(box_cox(Count, lambda_ped)) +
labs(title = "Lambda Transformed Pedestrians at Southern Cross Station")
gas <- tail(aus_production, 5*4) |> select(Gas)
autoplot(gas)
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components() %>%
as_tsibble() %>%
autoplot(season_adjust)
gas_outlier <- gas
gas_outlier$Gas[7] <- gas_outlier$Gas[7] + 300
gas_outlier %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas_outlier1 <- gas
gas_outlier1$Gas[20] <- gas_outlier1$Gas[20] + 300
gas_outlier1 %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas_outlier <- gas
gas_outlier$Gas[7] <- gas_outlier$Gas[7] + 300
gas_outlier %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas_outlier %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components() %>%
as_tsibble() %>%
autoplot(season_adjust)
gas_outlier1 <- gas
gas_outlier1$Gas[20] <- gas_outlier1$Gas[20] + 300
gas_outlier1 %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components()
gas_outlier1 %>%
model(cd = classical_decomposition(Gas, type = "multiplicative")) %>%
components() %>%
as_tsibble() %>%
autoplot(season_adjust)
View(myseries)
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components()
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components() %>%
autoplot()
myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components() %>%
as_tsibble() %>%
autoplot(season_adjust)
knitr::include_graphics('Figure3.19')
knitr::include_graphics('Figure3.19.png')
knitr::include_graphics('Figure3.20.png')
knitr::include_graphics('Figure3.19.png')
knitr::include_graphics('Figure3.19.png')
knitr::include_graphics('Figure3.19.png')
knitr::include_graphics('Figure3.19.png')
knitr::include_graphics('Figure3.19.png')
knitr::include_graphics('Figure3.19.png')
